{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { login as loginAPI, register as registerAPI, getMe } from '../services/api';\nimport { toast } from 'react-toastify';\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    checkAuth();\n  }, []);\n  const checkAuth = async () => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const {\n          data\n        } = await getMe();\n        setUser(data);\n      } catch (error) {\n        localStorage.removeItem('token');\n      }\n    }\n    setLoading(false);\n  };\n  const login = async (email, password) => {\n    try {\n      const {\n        data\n      } = await loginAPI({\n        email,\n        password\n      });\n      localStorage.setItem('token', data.token);\n      setUser(data);\n      toast.success('Login successful!');\n      return true;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      toast.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed');\n      return false;\n    }\n  };\n  const register = async (name, email, password) => {\n    try {\n      const {\n        data\n      } = await registerAPI({\n        name,\n        email,\n        password\n      });\n      localStorage.setItem('token', data.token);\n      setUser(data);\n      toast.success('Registration successful!');\n      return true;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      toast.error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed');\n      return false;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    toast.info('Logged out successfully');\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout\n  };\n  return {\n    children\n  };\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","login","loginAPI","register","registerAPI","getMe","toast","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","checkAuth","token","localStorage","getItem","data","error","removeItem","email","password","setItem","success","_error$response","_error$response$data","response","message","name","_error$response2","_error$response2$data","logout","info","value","_c","$RefreshReg$"],"sources":["/Users/malith_bandara/Desktop/AI-Dress-Mart/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\nimport { login as loginAPI, register as registerAPI, getMe } from '../services/api';\nimport { toast } from 'react-toastify';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n    const context = useContext(AuthContext);\n    if (!context) {\n        throw new Error('useAuth must be used within AuthProvider');\n    }\n    return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n    const [user, setUser] = useState(null);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        checkAuth();\n    }, []);\n\n    const checkAuth = async () => {\n        const token = localStorage.getItem('token');\n        if (token) {\n            try {\n                const { data } = await getMe();\n                setUser(data);\n            } catch (error) {\n                localStorage.removeItem('token');\n            }\n        }\n        setLoading(false);\n    };\n\n    const login = async (email, password) => {\n        try {\n            const { data } = await loginAPI({ email, password });\n            localStorage.setItem('token', data.token);\n            setUser(data);\n            toast.success('Login successful!');\n            return true;\n        } catch (error) {\n            toast.error(error.response?.data?.message || 'Login failed');\n            return false;\n        }\n    };\n\n    const register = async (name, email, password) => {\n        try {\n            const { data } = await registerAPI({ name, email, password });\n            localStorage.setItem('token', data.token);\n            setUser(data);\n            toast.success('Registration successful!');\n            return true;\n        } catch (error) {\n            toast.error(error.response?.data?.message || 'Registration failed');\n            return false;\n        }\n    };\n\n    const logout = () => {\n        localStorage.removeItem('token');\n        setUser(null);\n        toast.info('Logged out successfully');\n    };\n\n    const value = {\n        user,\n        loading,\n        login,\n        register,\n        logout,\n    };\n\n    return { children };\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}